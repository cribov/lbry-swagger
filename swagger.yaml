swagger: "2.0"
info:
  description: "This is a documentation for lbry protocol."
  version: "1.0.0"
  title: "Lbry Swagger"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:5279"
basePath: "/lbryapi"
tags:
- name: "blob"
- name: "block"
- name: "channel"
schemes:
- "http"
paths:
  /#blob_announce_all:
    post:
      tags:
      - "blob"
      description: "Announce all blobs to the DHT"
      operationId: "blob_announce_all"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/BlobAnnounceAll"
      responses:
        '200':
          description: ""

  /#blob_delete:
    post:
      tags:
      - "blob"
      description: "Delete a blob"
      operationId: "blob_delete"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/BlobDelete"
      responses:
          200:
            description: ""

  /#blob_get:
    post:
      tags:
      - "blob"
      description: "Download and return a blob"
      operationId: "blob_get"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/BlobGet"
      responses:
          200:
            description: ""

  /#blob_list:
    post:
      tags:
      - "blob"
      description: "Returns blob hashes. If not given filters, returns all blobs known by the blob manager"
      operationId: "blob_list"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/BlobList"
      responses:
          200:
            description: ""

  /#blob_reflect_all:
    post:
      tags:
      - "blob"
      description: "Reflects all saved blobs"
      operationId: "blob_reflect_all"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/BlobReflectAll"
      responses:
          200:
            description: ""

  /#block_show:
    post:
      tags:
      - "block"
      description: "Get contents of a block"
      operationId: "block_show"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/BlockShow"
      responses:
          200:
            description: ""

  /#channel_list_mine:
    post:
      tags:
      - "channel"
      description: "Get my channels"
      operationId: "channel_list_mine"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ChannelListMine"
      responses:
          200:
            description: ""

  /#channel_new:
    post:
      tags:
      - "channel"
      description: "Generate a publisher key and create a new certificate claim"
      operationId: "channel_new"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ChannelNew"
      responses:
          200:
            description: ""

  /#claim_abandon:
    post:
      tags:
      - "claim"
      description: "Abandon a name and reclaim credits from the claim"
      operationId: "claim_abandon"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ClaimAbandon"
      responses:
          200:
            description: ""

  /#claim_list:
    post:
      tags:
      - "claim"
      description: "Get claims for a name"
      operationId: "claim_list"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ClaimList"
      responses:
          200:
            description: ""

  /#claim_list_mine:
    post:
      tags:
      - "claim"
      description: "List my name claims"
      operationId: "claim_list_mine"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ClaimListMine"
      responses:
          200:
            description: ""

  /#claim_new_support:
    post:
      tags:
      - "claim"
      description: "Support a name claim"
      operationId: "claim_new_support"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ClaimNewSupport"
      responses:
          200:
            description: ""

  /#claim_show:
    post:
      tags:
      - "claim"
      description: "Resolve claim info from a LBRY name"
      operationId: "claim_show"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ClaimShow"
      responses:
          200:
            description: ""

  /#commands:
    post:
      tags:
      - "commands"
      description: "Return a list of available commands"
      operationId: "commands"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Commands"
      responses:
          200:
            description: ""

  /#daemon_stop:
    post:
      tags:
      - "daemon"
      description: "Stop lbrynet-daemon"
      operationId: "daemon_stop"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/DaemonStop"
      responses:
          200:
            description: ""

  /#descriptor_get:
    post:
      tags:
      - "descriptor"
      description: "Download and return a sd blob"
      operationId: "descriptor_get"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/DescriptorGet"
      responses:
          200:
            description: ""

  /#file_delete:
    post:
      tags:
      - "file"
      description: "Delete a lbry file"
      operationId: "file_delete"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/FileDelete"
      responses:
          200:
            description: ""

  /#file_list:
    post:
      tags:
      - "file"
      description: "List files limited by optional filters"
      operationId: "file_list"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/FileList"
      responses:
          200:
            description: ""

  /#file_set_status:
    post:
      tags:
      - "file"
      description: "Start or stop downloading a file"
      operationId: "file_set_status"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/FileSetStatus"
      responses:
          200:
            description: ""

  /#get:
    post:
      tags:
      - "get"
      description: "Download stream from a LBRY name."
      operationId: "get"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Get"
      responses:
          200:
            description: ""

  /#get_availability:
    post:
      tags:
      - "get"
      description: "Get stream availability for lbry uri"
      operationId: "get_availability"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/GetAvailability"
      responses:
          200:
            description: ""

  /#help:
    post:
      tags:
      - "help"
      description: "Return a useful message for an API command"
      operationId: "help"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Help"
      responses:
          200:
            description: ""

  /#peer_list:
    post:
      tags:
      - "peer"
      description: "Get peers for blob hash"
      operationId: "peer_list"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PeerList"
      responses:
          200:
            description: ""

  /#publish:
    post:
      tags:
      - "publish"
      description: "Make a new name claim and publish associated data to lbrynet,"
      operationId: "publish"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Publish"
      responses:
          200:
            description: ""

  /#reflect:
    post:
      tags:
      - "reflect"
      description: "Reflect a stream"
      operationId: "reflect"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Reflect"
      responses:
          200:
            description: ""

  /#report_bug:
    post:
      tags:
      - "report"
      description: "Report a bug to slack"
      operationId: "report_bug"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ReportBug"
      responses:
          200:
            description: ""

  /#resolve:
    post:
      tags:
      - "resolve"
      description: "Resolve a LBRY URI"
      operationId: "resolve"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Resolve"
      responses:
          200:
            description: ""

  /#resolve_name:
    post:
      tags:
      - "resolve"
      description: "Resolve stream info from a LBRY name"
      operationId: "resolve_name"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ResolveName"
      responses:
          200:
            description: ""

  /#send_amount_to_address:
    post:
      tags:
      - "send"
      description: "Send credits to an address"
      operationId: "send_amount_to_address"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SendAmountToAddress"
      responses:
          200:
            description: ""

  /#settings_get:
    post:
      tags:
      - "settings"
      description: "Get daemon settings"
      operationId: "settings_get"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SettingsGet"
      responses:
          200:
            description: ""

  /#settings_set:
    post:
      tags:
      - "settings"
      description: "Set daemon settings"
      operationId: "settings_set"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SettingsSet"
      responses:
          200:
            description: ""

  /#status:
    post:
      tags:
      - "status"
      description: "Return daemon status"
      operationId: "status"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Status"
      responses:
          200:
            description: ""

  /#stream_cost_estimate:
    post:
      tags:
      - "stream"
      description: "Get estimated cost for a lbry stream"
      operationId: "stream_cost_estimate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/StreamCostEstimate"
      responses:
          200:
            description: ""

  /#transaction_list:
    post:
      tags:
      - "transaction"
      description: "List transactions belonging to wallet"
      operationId: "transaction_list"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/TransactionList"
      responses:
          200:
            description: ""

  /#transaction_show:
    post:
      tags:
      - "transaction"
      description: "Get a decoded transaction from a txid"
      operationId: "transaction_show"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/TransactionShow"
      responses:
          200:
            description: ""

  /#version:
    post:
      tags:
      - "version"
      description: "Get lbry version information"
      operationId: "version"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Version"
      responses:
          200:
            description: ""

  /#wallet_balance:
    post:
      tags:
      - "wallet"
      description: "Return the balance of the wallet"
      operationId: "wallet_balance"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/WalletBalance"
      responses:
          200:
            description: ""

  /#wallet_is_address_mine:
    post:
      tags:
      - "wallet"
      description: "Checks if an address is associated with the current wallet."
      operationId: "wallet_is_address_mine"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/WalletIsAddressMine"
      responses:
          200:
            description: ""

  /#wallet_list:
    post:
      tags:
      - "wallet"
      description: "List wallet addresses"
      operationId: "wallet_list"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/WalletList"
      responses:
          200:
            description: ""

  /#wallet_new_address:
    post:
      tags:
      - "wallet"
      description: "Generate a new wallet address"
      operationId: "wallet_new_address"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/WalletNewAddress"
      responses:
          200:
            description: ""

  /#wallet_public_key:
    post:
      tags:
      - "wallet"
      description: "Get public key from wallet address"
      operationId: "wallet_public_key"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/WalletPublicKey"
      responses:
          200:
            description: ""

  /#wallet_unused_address:
    post:
      tags:
      - "wallet"
      description: "Return an address containing no balance, will create"
      operationId: "wallet_unused_address"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/WalletUnusedAddress"
      responses:
          200:
            description: ""

definitions:
  BlobAnnounceAll:
    type: "object"
    required: [method]
    properties:
      method:
        type: "string"
        example: "blob_announce_all"      

  BlobDelete:
    type: "object"
    required: [method,BlobHash]
    properties:
      method:
        type: "string"
        example: "blob_delete"      
      BlobHash:
        type: "string"
        description: "Hash of blob to get"
        example:

  BlobGet:
    type: "object"
    required: [method,BlobHash]
    properties:
      method:
        type: "string"
        example: "blob_get"      
      BlobHash:
        type: "string"
        description: "Blob hash of blob to get"
        example:
      Timeout:
        type: "integer"
        description: "Timeout in number of seconds"
        example:
      Encoding:
        type: "string"
        description: "By default no attempt at decoding is made, can be set to one of the following decoders: 'json'"
        example:
      PaymentRateManager:
        type: "string"
        description: "If not given the default payment rate manager will be used. supported alternative rate managers: 'only-free'"
        example:

  BlobList:
    type: "object"
    required: [method]
    properties:
      method:
        type: "string"
        example: "blob_list"      
      Uri:
        type: "string"
        description: "Filter by blobs in stream for winning claim"
        example:
      StreamHash:
        type: "string"
        description: "Filter by blobs in given stream hash"
        example:
      SdHash:
        type: "string"
        description: "Filter by blobs in given sd hash"
        example:
      Needed:
        type: "boolean"
        description: "Only return needed blobs"
        example:
      Finished:
        type: "boolean"
        description: "Only return finished blobs"
        example:
      PageSize:
        type: "integer"
        description: "Limit number of results returned"
        example:
      Page:
        type: "integer"
        description: "Filter to page x of [page_size] results"
        example:

  BlobReflectAll:
    type: "object"
    required: [method]
    properties:
      method:
        type: "string"
        example: "blob_reflect_all"      

  BlockShow:
    type: "object"
    required: [method,Blockhash]
    properties:
      method:
        type: "string"
        example: "block_show"      
      Blockhash:
        type: "string"
        description: "Hash of the block to look up"
        example:

  ChannelListMine:
    type: "object"
    required: [method]
    properties:
      method:
        type: "string"
        example: "channel_list_mine"      

  ChannelNew:
    type: "object"
    required: [method,ChannelName,Amount]
    properties:
      method:
        type: "string"
        example: "channel_new"      
      ChannelName:
        type: "string"
        description: "'@' prefixed name"
        example:
      Amount:
        type: "number"
        description: "Amount to claim name"
        example:

  ClaimAbandon:
    type: "object"
    required: [method,ClaimId]
    properties:
      method:
        type: "string"
        example: "claim_abandon"      
      ClaimId:
        type: "string"
        description: "Claim_id of claim"
        example:

  ClaimList:
    type: "object"
    required: [method,Name]
    properties:
      method:
        type: "string"
        example: "claim_list"      
      Name:
        type: "string"
        description: "Search for claims on this name"
        example:

  ClaimListMine:
    type: "object"
    required: [method]
    properties:
      method:
        type: "string"
        example: "claim_list_mine"      

  ClaimNewSupport:
    type: "object"
    required: [method,Name,ClaimId,Amount]
    properties:
      method:
        type: "string"
        example: "claim_new_support"      
      Name:
        type: "string"
        description: "Name"
        example:
      ClaimId:
        type: "string"
        description: "Claim ID of claim to support"
        example:
      Amount:
        type: "number"
        description: "Amount to support by"
        example:

  ClaimShow:
    type: "object"
    required: [method,Name]
    properties:
      method:
        type: "string"
        example: "claim_show"      
      Name:
        type: "string"
        description: "Name to look up, do not include lbry:// prefix"
        example:
      Txid:
        type: "string"
        description: "If specified, look for claim with this txid"
        example:
      Nout:
        type: "integer"
        description: "If specified, look for claim with this nout"
        example:
      ClaimId:
        type: "string"
        description: "If specified, look for claim with this claim_id"
        example:

  Commands:
    type: "object"
    required: [method]
    properties:
      method:
        type: "string"
        example: "commands"      

  DaemonStop:
    type: "object"
    required: [method]
    properties:
      method:
        type: "string"
        example: "daemon_stop"      

  DescriptorGet:
    type: "object"
    required: [method,SdHash]
    properties:
      method:
        type: "string"
        example: "descriptor_get"      
      SdHash:
        type: "string"
        description: "Hash of sd blob"
        example:
      Timeout:
        type: "integer"
        description: "Timeout in number of seconds"
        example:
      PaymentRateManager:
        type: "string"
        description: "If not given the default payment rate manager will be used. supported alternative rate managers: only-free"
        example:

  FileDelete:
    type: "object"
    required: [method,Rowid]
    properties:
      method:
        type: "string"
        example: "file_delete"      
      Name:
        type: "string"
        description: "Delete file by lbry name,"
        example:
      SdHash:
        type: "string"
        description: "Delete file by sd hash,"
        example:
      FileName:
        type: "string"
        description: "Delete file by the name in the downloads folder,"
        example:
      StreamHash:
        type: "string"
        description: "Delete file by stream hash,"
        example:
      ClaimId:
        type: "string"
        description: "Delete file by claim ID,"
        example:
      Outpoint:
        type: "string"
        description: "Delete file by claim outpoint,"
        example:
      Rowid:
        type: "integer"
        description: "Delete file by rowid in the file manager"
        example:
      DeleteTargetFile:
        type: "boolean"
        description: "Delete file from downloads folder, defaults to true if false only the blobs and db entries will be deleted"
        example:

  FileList:
    type: "object"
    required: [method,FullStatus]
    properties:
      method:
        type: "string"
        example: "file_list"      
      Name:
        type: "string"
        description: "Filter files by lbry name,"
        example:
      SdHash:
        type: "string"
        description: "Filter files by sd hash,"
        example:
      FileName:
        type: "string"
        description: "Filter files by the name in the downloads folder,"
        example:
      StreamHash:
        type: "string"
        description: "Filter files by stream hash,"
        example:
      ClaimId:
        type: "string"
        description: "Filter files by claim id,"
        example:
      Outpoint:
        type: "string"
        description: "Filter files by claim outpoint,"
        example:
      Rowid:
        type: "integer"
        description: "Filter files by internal row id,"
        example:
      FullStatus:
        type: "boolean"
        description: "If true populate the 'message' and 'size' fields"
        example:

  FileSetStatus:
    type: "object"
    required: [method,Status]
    properties:
      method:
        type: "string"
        example: "file_set_status"      
      Status:
        type: "string"
        description: "'start' or 'stop'"
        example:
      Name:
        type: "string"
        description: "Start file by lbry name,"
        example:
      SdHash:
        type: "string"
        description: "Start file by the hash in the name claim,"
        example:
      FileName:
        type: "string"
        description: "Start file by its name in the downloads folder,"
        example:

  Get:
    type: "object"
    required: [method,Uri]
    properties:
      method:
        type: "string"
        example: "get"      
      Uri:
        type: "string"
        description: "Lbry uri to download"
        example:
      FileName:
        type: "string"
        description: "A user specified name for the downloaded file"
        example:
      Timeout:
        type: "integer"
        description: "Download timeout in number of seconds"
        example:
      DownloadDirectory:
        type: "string"
        description: "Path to directory where file will be saved"
        example:

  GetAvailability:
    type: "object"
    required: [method,Uri]
    properties:
      method:
        type: "string"
        example: "get_availability"      
      Uri:
        type: "string"
        description: "Lbry uri"
        example:
      SdTimeout:
        type: "integer"
        description: "Sd blob download timeout"
        example:
      PeerTimeout:
        type: "integer"
        description: "How long to look for peers"
        example:

  Help:
    type: "object"
    required: [method]
    properties:
      method:
        type: "string"
        example: "help"      
      Command:
        type: "string"
        description: "Command to retrieve documentation for"
        example:

  PeerList:
    type: "object"
    required: [method,BlobHash]
    properties:
      method:
        type: "string"
        example: "peer_list"      
      BlobHash:
        type: "string"
        description: "Blob hash"
        example:
      Timeout:
        type: "integer"
        description: "Peer search timeout in seconds"
        example:

  Publish:
    type: "object"
    required: [method,Name,Bid]
    properties:
      method:
        type: "string"
        example: "publish"      
      Name:
        type: "string"
        description: "Name to be claimed"
        example:
      Bid:
        type: "number"
        description: "Amount of credits to commit in this claim,"
        example:
      Metadata:
        type: "string"
        description: "Metadata to associate with the claim."
        example:
      FilePath:
        type: "string"
        description: "Path to file to be associated with name. If provided, If no path is given but a metadata dict is provided, the source from the given metadata will be used."
        example:
      Fee:
        type: "string"
        description: "Dictionary representing key fee to download content: {currency_symbol: {'amount': float, 'address': str, optional}} supported currencies: LBC, USD, BTC If an address is not provided a new one will be automatically generated. Default fee is zero."
        example:
      Title:
        type: "string"
        description: "Title of the file"
        example:
      Description:
        type: "string"
        description: "Description of the file"
        example:
      Author:
        type: "string"
        description: "Author of the file"
        example:
      Language:
        type: "string"
        description: ", language code"
        example:
      License:
        type: "string"
        description: "License for the file"
        example:
      LicenseUrl:
        type: "string"
        description: "URL to license"
        example:
      Thumbnail:
        type: "string"
        description: "Thumbnail URL for the file"
        example:
      Preview:
        type: "string"
        description: "Preview URL for the file"
        example:
      Nsfw:
        type: "boolean"
        description: "True if not safe for work"
        example:
      Sources:
        type: "string"
        description: "{'lbry_sd_hash':sd_hash} specifies sd hash of file"
        example:
      ChannelName:
        type: "string"
        description: "Name of the publisher channel"
        example:

  Reflect:
    type: "object"
    required: [method,SdHash]
    properties:
      method:
        type: "string"
        example: "reflect"      
      SdHash:
        type: "string"
        description: "Sd_hash of lbry file"
        example:

  ReportBug:
    type: "object"
    required: [method,Message]
    properties:
      method:
        type: "string"
        example: "report_bug"      
      Message:
        type: "string"
        description: "Message to send"
        example:

  Resolve:
    type: "object"
    required: [method,Uri]
    properties:
      method:
        type: "string"
        example: "resolve"      
      Uri:
        type: "string"
        description: "Uri to download"
        example:

  ResolveName:
    type: "object"
    required: [method,Name]
    properties:
      method:
        type: "string"
        example: "resolve_name"      
      Name:
        type: "string"
        description: "Name to look up, do not include lbry:// prefix"
        example:

  SendAmountToAddress:
    type: "object"
    required: [method,Amount,Address]
    properties:
      method:
        type: "string"
        example: "send_amount_to_address"      
      Amount:
        type: "number"
        description: "The amount to send"
        example:
      Address:
        type: "string"
        description: "The address of the recipient in base58"
        example:

  SettingsGet:
    type: "object"
    required: [method]
    properties:
      method:
        type: "string"
        example: "settings_get"      

  SettingsSet:
    type: "object"
    required: [method,RunOnStartup,DataRate,MaxKeyFee,DisableMaxKeyFee,DownloadDirectory,PeerPort,MaxUpload,MaxDownload,DownloadTimeout,SearchTimeout,CacheTime]
    properties:
      method:
        type: "string"
        example: "settings_set"      
      RunOnStartup:
        type: "boolean"
        description: "Currently not supported"
        example:
      DataRate:
        type: "number"
        description: "Data rate,"
        example:
      MaxKeyFee:
        type: "number"
        description: "Maximum key fee,"
        example:
      DisableMaxKeyFee:
        type: "boolean"
        description: "True to disable max_key_fee check,"
        example:
      DownloadDirectory:
        type: "string"
        description: "Path of where files are downloaded,"
        example:
      PeerPort:
        type: "integer"
        description: "Port through which daemon should connect,"
        example:
      MaxUpload:
        type: "number"
        description: ", currently not supported"
        example:
      MaxDownload:
        type: "number"
        description: ", currently not supported"
        example:
      DownloadTimeout:
        type: "integer"
        description: "Download timeout in seconds"
        example:
      SearchTimeout:
        type: "number"
        description: "Search timeout in seconds"
        example:
      CacheTime:
        type: "integer"
        description: "Cache timeout in seconds"
        example:

  Status:
    type: "object"
    required: [method]
    properties:
      method:
        type: "string"
        example: "status"      
      SessionStatus:
        type: "boolean"
        description: "True to return session status, default is false"
        example:

  StreamCostEstimate:
    type: "object"
    required: [method,Name]
    properties:
      method:
        type: "string"
        example: "stream_cost_estimate"      
      Name:
        type: "string"
        description: "Lbry name"
        example:
      Size:
        type: "string"
        description: "Stream size, in bytes. if provided an sd blob won't be downloaded."
        example:

  TransactionList:
    type: "object"
    required: [method]
    properties:
      method:
        type: "string"
        example: "transaction_list"      

  TransactionShow:
    type: "object"
    required: [method,Txid]
    properties:
      method:
        type: "string"
        example: "transaction_show"      
      Txid:
        type: "string"
        description: "Txid of transaction"
        example:

  Version:
    type: "object"
    required: [method]
    properties:
      method:
        type: "string"
        example: "version"      

  WalletBalance:
    type: "object"
    required: [method]
    properties:
      method:
        type: "string"
        example: "wallet_balance"      
      Address:
        type: "string"
        description: "If address is provided only that balance will be given"
        example:
      IncludeUnconfirmed:
        type: "string"
        description: "If set unconfirmed balance will be included in the only takes effect when address is also provided."
        example:

  WalletIsAddressMine:
    type: "object"
    required: [method,Address]
    properties:
      method:
        type: "string"
        example: "wallet_is_address_mine"      
      Address:
        type: "string"
        description: "Address to check in base 58"
        example:

  WalletList:
    type: "object"
    required: [method]
    properties:
      method:
        type: "string"
        example: "wallet_list"      

  WalletNewAddress:
    type: "object"
    required: [method]
    properties:
      method:
        type: "string"
        example: "wallet_new_address"      

  WalletPublicKey:
    type: "object"
    required: [method,Address]
    properties:
      method:
        type: "string"
        example: "wallet_public_key"      
      Address:
        type: "string"
        description: "Wallet address in base58"
        example:

  WalletUnusedAddress:
    type: "object"
    required: [method]
    properties:
      method:
        type: "string"
        example: "wallet_unused_address"  
        
        
        
        
        
 
